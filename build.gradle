buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        maven { url "https://repo.maven.apache.org/maven2/" }
    }
    dependencies {
        classpath 'org.ajoberstar.grgit:grgit-core:3.1.1'
    }
}


group = 'com.hmtmcse'
version = '0.0.1'



allprojects {

    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        maven { url "https://repo.maven.apache.org/maven2/" }
    }

    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'groovy'

    sourceCompatibility = '11'

    dependencies {
        testImplementation 'org.codehaus.groovy:groovy-all:2.5.8'
        testImplementation group: 'org.spockframework', name: 'spock-core', version: '1.3-groovy-2.5'
        testImplementation 'com.athaydes:spock-reports:1.6.2', { transitive = false }
        testImplementation 'org.slf4j:slf4j-api:1.7.28'
        testImplementation 'org.slf4j:slf4j-simple:1.7.28'

    }

}

subprojects { project ->


}


def projectDependencies = [
        [
                "name"        : "HTML Template",
                "destination" : templatePath,
                "dependencies": [
                        "templates": "https://github.com/TextToWeb/templates.git",
                ]
        ],
        [
                "name"        : "Other Libraries",
                "destination" : libraryPath,
                "dependencies": [
                        "asciidoc"               : "https://github.com/hmtmcse/asciidoc.git",
                        "java-tm-util"               : "https://github.com/hmtmcse/java-tm-util.git",
                        "java-console-table"     : "https://github.com/hmtmcse/java-console-table.git",
                        "java-common"            : "https://github.com/hmtmcse/java-common.git",
                        "java-shell-util"        : "https://github.com/hmtmcse/java-shell-util.git",
                        "parser4java"            : "https://github.com/hmtmcse/parser4java.git",
                        "java-file-util"         : "https://github.com/hmtmcse/java-file-util.git",
                        "java-text-and-file-util": "https://github.com/hmtmcse/java-text-and-file-util.git",
                ]
        ]
]

task resolveDependencies {
    doLast {
        String destinationPath = ""
        projectDependencies.each { Map dependencyMap ->
            destinationPath = dependencyMap.destination
            println("Now Cloning ${dependencyMap.name}")
            dependencyMap.dependencies.each { name, url ->
                println("------------------------------------------------------------------------------------------")
                def destination = file(destinationPath + name)
                try {
                    println("Cloning Project ${name}")
                    org.ajoberstar.grgit.Grgit.clone(dir: destination, uri: url)
                } catch (Exception e) {
                    println(e.getMessage())
                }
                println("------------------------------------------------------------------------------------------\n")
            }
        }
    }
}